# Generated by Django 5.2.1 on 2025-05-29 01:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ClassName",
            fields=[
                (
                    "class_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("class_name", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "class_name",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "room_number",
                    models.CharField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("building_name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "location",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "student_id",
                    models.CharField(
                        max_length=20, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("age", models.IntegerField()),
                (
                    "major",
                    models.CharField(
                        choices=[
                            ("Biotechnology", "Biotechnology"),
                            ("Graphic Design", "Graphic Design"),
                            ("Data Science", "Data Science"),
                            ("Software Engineering", "Software Engineering"),
                            ("Cybersecurity", "Cybersecurity"),
                            ("Cloud Computing", "Cloud Computing"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "male"), ("female", "female")], max_length=10
                    ),
                ),
                ("phone_number", models.CharField(max_length=20, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("date_of_birth", models.DateField()),
                ("status", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "student",
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "teacher_id",
                    models.CharField(
                        max_length=20, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("age", models.IntegerField()),
                (
                    "major",
                    models.CharField(
                        choices=[
                            ("Biotechnology", "Biotechnology"),
                            ("Graphic Design", "Graphic Design"),
                            ("Data Science", "Data Science"),
                            ("Software Engineering", "Software Engineering"),
                            ("Cybersecurity", "Cybersecurity"),
                            ("Cloud Computing", "Cloud Computing"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "male"), ("female", "female")], max_length=10
                    ),
                ),
                ("phone_number", models.CharField(max_length=20, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("date_of_birth", models.DateField()),
                ("status", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "teacher",
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                ("schedule_id", models.AutoField(primary_key=True, serialize=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "class_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="students.classname",
                    ),
                ),
                (
                    "room_number",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="students.location",
                    ),
                ),
            ],
            options={
                "db_table": "schedule",
            },
        ),
        migrations.AddField(
            model_name="classname",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="students.teacher"
            ),
        ),
        migrations.CreateModel(
            name="StudentClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registered_at", models.DateTimeField(auto_now_add=True)),
                ("learning_status", models.CharField(max_length=50)),
                (
                    "class_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="students.classname",
                    ),
                ),
                (
                    "student_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="students.student",
                    ),
                ),
            ],
            options={
                "db_table": "student_class",
                "unique_together": {("student_id", "class_id")},
            },
        ),
    ]
